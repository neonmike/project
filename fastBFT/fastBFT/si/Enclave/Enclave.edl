/*
 * Copyright (C) 2011-2017 Intel Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of Intel Corporation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/* Enclave.edl - Top EDL file. */

enclave {
    
    include "user_types.h" /* buffer_t */
    include "unistd.h"
    include "sgx_tcrypto.h"
    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */
    

    /* 
     * ocall_print_string - invokes OCALL to display string buffer inside the enclave.
     *  [in]: copy the string buffer to App outside.
     *  [string]: specifies 'str' is a NULL terminated buffer.
     */
    trusted {
       // public void ecall_mymemcpy(); 
       
      // public void TeeCalGRAT([in,out,size=DeLen] struct mTrsLt *mTLst,[in,size=SoLen] struct msgRtLt *msRf,[in,size=gCLen]struct gCarTrust *gCTrust,size_t DeLen,size_t SoLen,size_t gCLen,int n);
         public void save_key([in,size=80]uint8_t *key);
         public void verify_counter([in,out,size=64]sgx_ec256_signature_t *sprc_signature,[in,size=128]uint8_t *ensecrets,[in,size=32]uint8_t *hm,[out,size=16]uint8_t *sci,[out,size=30]uint8_t *result,[out,size=32]uint8_t *hc1);
         public void update_counter([in,size=16]uint8_t *sc,[in,size=64]sgx_ec256_signature_t *up_signature,[in,size=32]uint8_t *hc1,[out,size=35]uint8_t *result);
         public int get_c();
         public int get_v();
         //public void verify_c([in,size=128]uint8_t *ensecrets,[out,size=bsize]uint8_t *sicv,size_t bsize);
        };
        
    untrusted {
        void ocall_print_string([in, string] const char *str);
       
    };

};
