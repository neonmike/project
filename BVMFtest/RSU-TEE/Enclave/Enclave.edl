/*
 * Copyright (C) 2011-2017 Intel Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of Intel Corporation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/* Enclave.edl - Top EDL file. */

enclave {
    
    include "user_types.h" /* buffer_t */
    include "unistd.h"

    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */
    
    from "Edger8rSyntax/Types.edl" import *;
    from "Edger8rSyntax/Pointers.edl" import *;
    from "Edger8rSyntax/Arrays.edl" import *;
    from "Edger8rSyntax/Functions.edl" import *;

    from "TrustedLibrary/Libc.edl" import *;
    from "TrustedLibrary/Libcxx.edl" import ecall_exception, ecall_map;
    from "TrustedLibrary/Thread.edl" import *;

    /* 
     * ocall_print_string - invokes OCALL to display string buffer inside the enclave.
     *  [in]: copy the string buffer to App outside.
     *  [string]: specifies 'str' is a NULL terminated buffer.
     */
    trusted {
       // public void ecall_mymemcpy(); 
       public void MyStrCpy([out,size=DeLen] char*DeStr,[in,size=SoLen] char*SoStr,size_t DeLen,size_t SoLen);
       public size_t MyAccum(size_t start,size_t end);
       //public void MySleep([out,size=DeLen] char*DeStr,[in,size=SoLen] char*SoStr,size_t DeLen,size_t SoLen);
       //public void TeeCalGR([out] struct mTrsLt DeStr[5],[in] struct msgRtLt  SoStr[15]);
       //public void TeeCalGRA([out] float DeStr[5],[in] float SoStr[15],int n);
       //用于计算全局rating消息trust
     //  public void TeeCalGRAT([out,size=DeLen] float *DeStr,[in,size=SoLen] struct ratingsD *SoStr,size_t DeLen,size_t SoLen,int n);
       public void TeeCalGRAT([in,out,size=DeLen] struct mTrsLt *mTLst,[in,size=SoLen] struct msgRtLt *msRf,[in,size=gCLen]struct gCarTrust *gCTrust,size_t DeLen,size_t SoLen,size_t gCLen,int n);
       public void TeeCalSEG([in,size=DeLen] struct mTrsLt *mTLs,[in,size=SoLen] struct msgRtLt *msRL,[in,out,size=gCLen]struct gCarTrust *gCTrust,size_t DeLen,size_t SoLen,size_t gCLen,int nTLsn,int msRLn,int gCTrustn);
        };
        
    untrusted {
        void ocall_print_string([in, string] const char *str);
       
    };

};
